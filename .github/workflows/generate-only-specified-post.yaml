name: generate-only-specified-post

on:
  workflow_dispatch:
    inputs:
      slug:
        description: The slug to generate (no `/` as prefix required)
        required: true
        type: string
      kind:
        description: Whether the post is updated or created
        required: true
        type: string

jobs:
  generate-only-specified-post:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.9.1

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: npm ci

      - name: Install Python modules
        run: pip3 install httpx

      - name: Decrypt secrets with gpg
        run: |
          echo "${{ secrets.GPG_PASSPHRASE }}" \
            | sudo gpg --batch --passphrase-fd 0 --output "src/secrets/secret.dev.js" --decrypt "src/secrets/secret.dev.js.gpg" 
          echo "${{ secrets.GPG_PASSPHRASE }}" \
            | sudo gpg --batch --passphrase-fd 0 --output "src/secrets/secret.prd.js" --decrypt "src/secrets/secret.prd.js.gpg" 

      - name: Set a post to specify
        run: |
          echo ROUTE_TO_GENERATE=${{ github.event.inputs.slug }} >> $GITHUB_ENV

      - name: Re-generate a specified post
        run: |
          sed -irz "s/\/\/ ### //g" nuxt.config.ts
          sed -irz "s/\[###\]/['\/${{ env.ROUTE_TO_GENERATE }}']/g" nuxt.config.ts
          npm run generate

      - name: Generate XMLs
        run: |
          python3 .github/workflows/generate_sitemaps.py
          python3 .github/workflows/generate_feeds.py
 
      - name: Sign in
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Copy files to S3
        run: |
          aws s3 sync \
            --delete \
            --region ap-northeast-1 \
            --cache-control "no-cache" \
            .output/public/${{ env.ROUTE_TO_GENERATE }}/ s3://mirumime-prd-mirumi-me/${{ env.ROUTE_TO_GENERATE }}/
          aws s3 sync \
            --delete \
            --region ap-northeast-1 \
            --exclude "*" \
            --include "index.html" \
            --include "_payload.js" \
            --include "entries/*" \
            --include "entry-list/*" \
            --include "sitemap*" \
            --cache-control "no-cache" \
            .output/public/ s3://mirumime-prd-mirumi-me/

      - name: Purge CDN caches
        if: github.event.inputs.kind == 'update'
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E1UPWIMHFP5TEC \
            --paths "/${{ env.ROUTE_TO_GENERATE }}/*" \
              "/index.html" \
              "/_payload.js" \
              "/entries/*" \
              "/entry-list/*" \
              "/sitemap*"
